#include<bits/stdc++.h>
using namespace std;
char a[3][3];
int c[3][3];
void ks() {
	printf("****************************************\n");
	printf("**************   1.play   **************\n");
	printf("**************   2.exit   **************\n");
	printf("****************************************\n");
}
void csh(char a[3][3]) {
	system("CLS");
	for (int i = 0; i <= 2; i++) {
		for (int j = 0; j <= 2; j++) {
			a[i][j] = ' ';
		}
	}
	for (int i = 0; i <= 2; i++) {
		for (int j = 0; j <= 2; j++) {
			c[i][j] = 0;
		}
	}
}
void dyqp(char a[3][3]) {
	for (int i = 0; i <= 2; i++) {
		printf("                *******\n");
		printf("                |%c|%c|%c|\n", a[i][0], a[i][1], a[i][2]);
	}
	printf("                *******\n");
}
int pdqpm(char a[3][3]) {
	for (int i = 0; i <= 2; i++) {
		for (int j = 0; j <= 2; j++) {
			if (a[i][j] == ' ') {
				return 0;
			}
		}
	}
	return 1;
}
char pdsy(char a[3][3]) {
	if ((a[0][0] == '*' && a[0][1] == '*' && a[0][2] == '*') || (a[1][0] == '*' && a[1][1] == '*' && a[1][2] == '*') || (a[2][0] == '*' && a[2][1] == '*' && a[2][2] == '*') || (a[0][0] == '*' && a[1][0] == '*' && a[2][0] == '*') || (a[0][1] == '*' && a[1][1] == '*' && a[2][1] == '*') || (a[0][2] == '*' && a[1][2] == '*' && a[2][2] == '*') || (a[0][0] == '*' && a[1][1] == '*' && a[2][2] == '*') || (a[0][2] == '*' && a[1][1] == '*' && a[2][0] == '*')) {
		return '*';
	}
	if ((a[0][0] == '#' && a[0][1] == '#' && a[0][2] == '#') || (a[1][0] == '#' && a[1][1] == '#' && a[1][2] == '#') || (a[2][0] == '#' && a[2][1] == '#' && a[2][2] == '#') || (a[0][0] == '#' && a[1][0] == '#' && a[2][0] == '#') || (a[0][1] == '#' && a[1][1] == '#' && a[2][1] == '#') || (a[0][2] == '#' && a[1][2] == '#' && a[2][2] == '#') || (a[0][0] == '#' && a[1][1] == '#' && a[2][2] == '#') || (a[0][2] == '#' && a[1][1] == '#' && a[2][0] == '#')) {
		return '#';
	}
	if (pdqpm(a) == 0) {
		return '-';
	} else {
		return '+';
	}
}

void wjlz(char a[3][3]) {
	int x, y;
	while (1) {
		scanf("%d%d", &x, &y);
		if (x <= 2 && x >= 0 && y <= 2 && y >= 0) {
			if (a[x][y] == ' ') {
				a[x][y] = '*';
				break;
			} else {
				printf("占错\n");
			}
		} else {
			printf("数错\n");
		}
	}
}
int pdwz2(char a[3][3]) {
	int b = 0, d = 0, e = 0;
	//1 2
	if (a[0][0] == '#' && a[0][1] == '#' && a[0][2] == ' ') {
		d = 0;
		e = 2;
		b++;
	}
	//3 2
	if (a[0][2] == '#' && a[0][1] == '#' && a[0][0] == ' ') {
		d = 0;
		e = 0;
		b++;
	}
	//1 3
	if (a[0][0] == '#' && a[0][2] == '#' && a[0][1] == ' ') {
		d = 0;
		e = 1;
		b++;
	}
	//4 5
	if (a[1][0] == '#' && a[1][1] == '#' && a[1][2] == ' ') {
		d = 1;
		e = 2;
		b++;
	}
	//6 5
	if (a[1][2] == '#' && a[1][1] == '#' && a[1][0] == ' ') {
		d = 1;
		e = 0;
		b++;
	}
	//6 4
	if (a[1][2] == '#' && a[1][0] == '#' && a[1][1] == ' ') {
		d = 1;
		e = 1;
		b++;
	}
	//7 8
	if (a[2][0] == '#' && a[2][1] == '#' && a[2][2] == ' ') {
		d = 2;
		e = 2;
		b++;
	}
	//9 8
	if (a[2][2] == '#' && a[2][1] == '#' && a[2][0] == ' ') {
		d = 2;
		e = 0;
		b++;
	}
	//9 7
	if (a[2][2] == '#' && a[2][0] == '#' && a[2][1] == ' ') {
		d = 2;
		e = 1;
		b++;
	}
	//1 4
	if (a[0][0] == '#' && a[1][0] == '#' && a[2][0] == ' ') {
		d = 2;
		e = 0;
		b++;
	}
	//4 7
	if (a[1][0] == '#' && a[2][0] == '#' && a[0][0] == ' ') {
		d = 0;
		e = 0;
		b++;
	}
	//1 7
	if (a[0][0] == '#' && a[2][0] == '#' && a[1][0] == ' ') {
		d = 1;
		e = 0;
		b++;
	}
	//2 5
	if (a[0][1] == '#' && a[1][1] == '#' && a[2][1] == ' ') {
		d = 2;
		e = 1;
		b++;
	}
	//5 8
	if (a[1][1] == '#' && a[2][1] == '#' && a[0][1] == ' ') {
		d = 0;
		e = 1;
		b++;
	}
	//2 8
	if (a[0][1] == '#' && a[2][1] == '#' && a[1][1] == ' ') {
		d = 1;
		e = 1;
		b++;
	}
	//3 6
	if (a[0][2] == '#' && a[1][2] == '#' && a[2][2] == ' ') {
		d = 2;
		e = 2;
		b++;
	}
	//6 9
	if (a[1][2] == '#' && a[2][2] == '#' && a[0][2] == ' ') {
		d = 0;
		e = 2;
		b++;
	}
	//3 9
	if (a[0][2] == '#' && a[2][2] == '#' && a[1][2] == ' ') {
		d = 1;
		e = 2;
		b++;
	}
	//1 5
	if (a[0][0] == '#' && a[1][1] == '#' && a[2][2] == ' ') {
		d = 2;
		e = 2;
		b++;
	}
	//9 5
	if (a[2][2] == '#' && a[1][1] == '#' && a[0][0] == ' ') {
		d = 0;
		e = 0;
		b++;
	}
	//1 9
	if (a[0][0] == '#' && a[2][2] == '#' && a[1][1] == ' ') {
		d = 1;
		e = 1;
		b++;
	}
	//3 5
	if (a[0][2] == '#' && a[1][1] == '#' && a[2][0] == ' ') {
		d = 2;
		e = 0;
		b++;
	}
	//7 5
	if (a[2][0] == '#' && a[1][1] == '#' && a[0][2] == ' ') {
		d = 0;
		e = 2;
		b++;
	}
	//3 7
	if (a[0][2] == '#' && a[2][0] == '#' && a[1][1] == ' ') {
		d = 1;
		e = 1;
		b++;
	}
	if (b != 0) {
		a[d][e] = '#';
		printf("pdwz2 %d %d\n", d, e);
	}
	return b;
}
void pdwz(char a[3][3], int c[3][3]) {
	int d = c[0][0], e = 0, f = 0;
	if (pdwz2(a) == 0) {
		if (a[1][1] == ' ') {
			a[1][1] = '#';
			printf("pdwz 1 1\n");
		} else {
			if (a[0][0] == ' ') {
				for (int i = 1; i <= 2; i++) {
					if (a[0][i] == ' ' || a[0][i] == '#') {
						c[0][0]++;
					}
				}
				for (int i = 1; i <= 2; i++) {
					if (a[i][0] == ' ' || a[i][0] == '#') {
						c[0][0]++;
					}
				}
				if (a[1][1] == ' ' || a[1][1] == '#') {
					c[0][0]++;
				}
				if (a[2][2] == ' ' || a[2][2] == '#') {
					c[0][0]++;
				}
			}
			if (a[0][1] == ' ') {
				for (int i = 1; i <= 2; i++) {
					if (a[i][1] == ' ' || a[i][1] == '#') {
						c[0][1]++;
					}
				}
				if (a[0][0] == ' ' || a[0][0] == '#') {
					c[0][1]++;
				}
				if (a[0][2] == ' ' || a[0][2] == '#') {
					c[0][1]++;
				}
			}
			if (a[0][2] == ' ') {
				for (int i = 1; i <= 0; i--) {
					if (a[0][i] == ' ' || a[0][i] == '#') {
						c[0][2]++;
					}
				}
				for (int i = 1; i <= 2; i++) {
					if (a[i][2] == ' ' || a[i][2] == '#') {
						c[0][2]++;
					}
				}
				if (a[1][1] == ' ' || a[1][1] == '#') {
					c[0][2]++;
				}
				if (a[2][0] == ' ' || a[2][0] == '#') {
					c[0][2]++;
				}
			}
			if (a[1][0] == ' ') {
				for (int i = 1; i <= 2; i++) {
					if (a[1][i] == ' ' || a[1][i] == '#') {
						c[1][0]++;
					}
				}
				if (a[0][0] == ' ' || a[0][0] == '#') {
					c[1][0]++;
				}
				if (a[2][0] == ' ' || a[2][0] == '#') {
					c[1][0]++;
				}
			}
			if (a[1][2] == ' ') {
				for (int i = 1; i <= 0; i--) {
					if (a[1][i] == ' ' || a[1][i] == '#') {
						c[1][2]++;
					}
				}
				if (a[0][2] == ' ' || a[0][2] == '#') {
					c[1][2]++;
				}
				if (a[2][2] == ' ' || a[2][2] == '#') {
					c[1][2]++;
				}
			}
			if (a[2][0] == ' ') {
				for (int i = 1; i <= 2; i++) {
					if (a[2][i] == ' ' || a[2][i] == '#') {
						c[2][0]++;
					}
				}
				for (int i = 1; i <= 0; i--) {
					if (a[i][0] == ' ' || a[i][0] == '#') {
						c[2][0]++;
					}
				}
				if (a[1][1] == ' ' || a[1][1] == '#') {
					c[2][0]++;
				}
				if (a[0][2] == ' ' || a[0][2] == '#') {
					c[2][0]++;
				}
			}
			if (a[2][1] == ' ') {
				for (int i = 1; i <= 0; i--) {
					if (a[i][1] == ' ' || a[i][1] == '#') {
						c[2][1]++;
					}
				}
				if (a[2][0] == ' ' || a[2][0] == '#') {
					c[2][1]++;
				}
				if (a[2][2] == ' ' || a[2][2] == '#') {
					c[2][1]++;
				}
			}
			if (a[2][2] == ' ') {
				for (int i = 1; i <= 0; i--) {
					if (a[2][i] == ' ' || a[2][i] == '#') {
						c[2][2]++;
					}
				}
				for (int i = 1; i <= 0; i--) {
					if (a[i][2] == ' ' || a[i][2] == '#') {
						c[2][2]++;
					}
				}
				if (a[1][1] == ' ' || a[1][1] == '#') {
					c[2][2]++;
				}
				if (a[0][0] == ' ' || a[0][0] == '#') {
					c[2][2]++;
				}
			}
			for (int i = 0; i <= 2; i++) {
				for (int j = 0; j <= 2; j++) {
					if (c[i][j] > d) {
						d = c[i][j];
						e = i;
						f = j;
					}
				}
			}
			a[e][f] = '#';
			printf("pdwz %d %d\n", e, f);
		}
	}
}
void dnlz(char a[3][3]) {
	/*int x, y;
	while (1) {
		x = rand() % 3;
		y = rand() % 3;
		if (a[x][y] == ' ') {
			a[x][y] = '#';
			break;
		}
	}*/
	pdwz(a, c);
}
void zlzw() {
	csh(a);
	dyqp(a);
	while (1) {
		printf("玩家回合\n");
		wjlz(a);
		dyqp(a);
		if (pdsy(a) == '*') {
			printf("玩家赢\n");
			break;
		}
		if (pdsy(a) == '+') {
			printf("平\n");
			break;
		}
		printf("电脑回合\n");
		dnlz(a);
		dyqp(a);
		if (pdsy(a) == '#') {
			printf("电脑赢\n");
			break;
		}
		if (pdsy(a) == '+') {
			printf("平\n");
			break;
		}

	}
}
void zlzd() {
	csh(a);
	dyqp(a);
	while (1) {
		printf("电脑回合\n");
		dnlz(a);
		dyqp(a);
		if (pdsy(a) == '#') {
			printf("电脑赢\n");
			break;
		}
		if (pdsy(a) == '+') {
			printf("平\n");
			break;
		}
		printf("玩家回合\n");
		wjlz(a);
		dyqp(a);
		if (pdsy(a) == '*') {
			printf("玩家赢\n");
			break;
		}
		if (pdsy(a) == '+') {
			printf("平\n");
			break;
		}
	}
}
void zks() {
	srand(time(NULL));
	int b, c;
	do {
		ks();
		c = rand() % 2;
		scanf("%d", &b);
		switch (b) {
			case 1:
				if (c == 0) {
					zlzd();
				} else {
					zlzw();
				}
				break;
			case 2:
				printf("结束");
				break;
			default:
				scanf("%d", &b);
		}
	} while (b != 2);
}
int main() {
	zks();
	return 0;
}
